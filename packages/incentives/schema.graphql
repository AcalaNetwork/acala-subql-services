type Block @entity {
  id: ID! # block number
  hash: String
  number: BigInt
  timestamp: Date
}

type Extrinsic @entity {
  id: ID! # extrinsic hash
  hash: String
  block: Block

  address: Account
  method: String
  section: String
}

type Account @entity {
  id: ID! # user address
  address: String
  txCount: BigInt

  # history
  depositDexShare: [DepositDexShare] @derivedFrom(field: "address")
  withdrawDexShare: [WithdrawDexShare] @derivedFrom(field: "address")
  payoutRewards: [PayoutRewards] @derivedFrom(field: "address")
  claimRewards: [ClaimRewards] @derivedFrom(field: "address")
}

type Token @entity {
  id: ID!

  name: String
  decimals: Int

  # history
  depositDexShare: [DepositDexShare] @derivedFrom(field: "token")
  withdrawDexShare: [WithdrawDexShare] @derivedFrom(field: "token")
  payoutRewards: [PayoutRewards] @derivedFrom(field: "token")
  claimRewards: [ClaimRewards] @derivedFrom(field: "token")
}

type DepositDexShare @entity {
  id: ID!

  address: Account
  token: Token

  amount: BigInt

  block: Block
  extrinsic: Extrinsic
  timestamp: Date
}

type WithdrawDexShare @entity {
  id: ID!

  address: Account
  token: Token

  amount: BigInt

  block: Block
  extrinsic: Extrinsic
  timestamp: Date
}

type PayoutRewards @entity {
  # who, pool_id, reward_currency_type, actual_payout, deduction_amount
  id: ID!

  address: Account
  token: Token
  pool: String

  actualPayout: BigInt
  deductionAmount: BigInt

  block: Block
  extrinsic: Extrinsic
  timestamp: Date
}

type ClaimRewards @entity {
  # who, pool_id, reward_currency_id, actual_amount, deduction_amount
  id: ID!

  address: Account
  token: Token
  pool: String

  actualAmount: BigInt
  deductionAmount: BigInt

  block: Block
  extrinsic: Extrinsic
  timestamp: Date
}

