type Token @entity {
    id: ID! # token symbol
    decimals: Int!

    volume: BigInt! # total trade volume, sum of transfer, deposit, withdrawn, reserved
    issuance: BigInt! # total issuance amount
    reserved: BigInt! # reserved amount
    updateAtBlock: BigInt # update at block
}

type HourToken @entity {
    id: ID! # token symbol
    token: Token!

    volume: BigInt! # total trade volume
    issuance: BigInt! # total issuance amount
    reserved: BigInt! # reserved amount
    timestmap: Date
    updateAtBlock: BigInt # update at block
}

type DailyToken @entity {
    id: ID! # token symbol
    token: Token!

    volume: BigInt! # total trade volume
    issuance: BigInt! # total issuance amount
    reserved: BigInt! # reserved amount
    timestmap: Date
    updateAtBlock: BigInt # update at block
}

type Account @entity {
    id: ID! # account address
    address: String!
    mark: String # mark system account
    tokens: [AccountBalance] @derivedFrom(field: "account") # group all tokens belong to the account
}

type AccountBalance @entity {
    id: ID! #`account`-`token`
    account: Account!
    token: Token!

    total: BigInt! # total balance
    free: BigInt! # free balance
    reserved: BigInt! #revert balance

    updateAtBlock: BigInt! # update block number
}

type HourAccountBalance @entity {
    id: ID! #`account`-`token`
    account: Account!
    token: Token!

    total: BigInt! # total balance
    free: BigInt! # free balance
    reserved: BigInt! #revert balance
    timestamp: Date
    updateAtBlock: BigInt # update at block
}

type DailyAccountBalance @entity {
    id: ID! #`account`-`token`
    account: Account!
    token: Token!

    total: BigInt! # total balance
    free: BigInt! # free balance
    reserved: BigInt! #revert balance
    timestamp: Date
    updateAtBlock: BigInt # update at block
}

type Block @entity {
    id: ID!
    hash: String
    height: BigInt
    timestamp: Date
}