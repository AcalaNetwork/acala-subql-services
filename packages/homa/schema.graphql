type Account @entity {
  id: ID! # user address
  address: String
  txCount: BigInt

  # history
  mint: [Mint] @derivedFrom(field: "address")
  redeemRequestCancelled: [RedeemRequestCancelled]
    @derivedFrom(field: "address")
  requestedRedeem: [RequestedRedeem] @derivedFrom(field: "address")
  redeemedByUnbond: [RedeemedByUnbond] @derivedFrom(field: "address")
  redeemed: [Redeemed] @derivedFrom(field: "address")
}

type Mint @entity {
  # homaLite: user, amount_staked, amount_minted
  # homa:     minter,staking_currency_amount, liquid_amount_received, liquid_amount_added_to_void
  id: ID!

  address: Account
  type: String

  amountStaked: BigInt
  amountMinted: BigInt
  stakingCurrencyAmount: BigInt
  liquidAmountReceived: BigInt
  liquidAmountAddedToVoid: BigInt

  block: BigInt
  extrinsic: String
  timestamp: Date
}

type RedeemRequestCancelled @entity {
  # homaLite: who, liquid_amount_unreserved
  # homa:     redeemer, cancelled_liquid_amount
  id: ID!

  address: Account
  amount: BigInt

  block: BigInt
  extrinsic: String
  timestamp: Date
}

type RequestedRedeem @entity {
  # homa:     redeemer, liquid_amount, allow_fast_match
  id: ID!

  address: Account
  amount: BigInt
  allowFastMatch: Boolean

  block: BigInt
  extrinsic: String
  timestamp: Date
}

type RedeemRequested @entity {
  # homalite: who, liquid_amount, extra_fee
  id: ID!

  address: Account
  amount: BigInt
  extraFee: BigInt

  block: BigInt
  extrinsic: String
  timestamp: Date
}

type RedeemedByUnbond @entity {
  # homa:  redeemer,era_index_when_unbond, liquid_amount, unbonding_staking_amount
  id: ID!

  address: Account
  eraIndexWhenUnbond: BigInt
  liquidAmount: BigInt
  unbondingStakingAmount: BigInt

  block: BigInt
  extrinsic: String
  timestamp: Date
}

type Redeemed @entity {
  #homalite: user, staking_amount_redeemed, liquid_amount_deducted
  id: ID!

  address: Account
  stakingAmountRedeemed: BigInt
  liquidAmountDeducted: BigInt

  block: BigInt
  extrinsic: String
  timestamp: Date
}

type RedeemedByFastMatch @entity {
  id: ID!

  address: Account
  matchedLiquidAmount: BigInt
  feeInLiquid: BigInt
  redeemedStakingAmount: BigInt

  block: BigInt
  extrinsic: String
  timestamp: Date
}

type Rate @entity {
  id: ID!

  totalStaking: BigInt
  totalLiquidity: BigInt
  totalVoidLiquid: BigInt
  exchangeRate: BigInt

  block: BigInt
  extrinsic: String
  timestamp: Date
}
